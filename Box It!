#include<bits/stdc++.h>

using namespace std;
//Implement the class Box  
//l,b,h are integers representing the dimensions of the box

// The class should have the following functions : 

// Constructors: 
// Box();
// Box(int,int,int);
// Box(Box);


// int getLength(); // Return box's length
// int getBreadth (); // Return box's breadth
// int getHeight ();  //Return box's height
// long long CalculateVolume(); // Return the volume of the box

//Overload operator < as specified
//bool operator<(Box& b)

//Overload operator << as specified
//ostream& operator<<(ostream& out, Box& B)


class Box {
  private:
    long long   l,b,h;
    //int volume; 
  public:
    Box():l(0),b(0),h(0){}
    Box(int length, int breadth, int height){
        l=length;
        b=breadth;
        h=height;    
    };
    Box(const Box& bx1)
    {
        l = bx1.l;
        b = bx1.b;
        h = bx1.h;
    }
    
    int getLength(){
        return l;
    };
    int getBreadth(){
        return b;
    };
    int getHeight(){
        return h;
    };
    long long CalculateVolume(){
      //  cout<<l<<endl;
     //   cout<<b<<endl;
      //  cout<<h<<endl;
      long long volume=0;
        volume=abs(l*b*h);
      // cout<<"volume"<<volume<<endl;
        return volume;
    }; 
    
       
    
};

bool operator <(Box& A, Box& B){
     bool diff;
     
     if (A.getLength()<B.getLength()) {
         diff=true;
     }else if(A.getBreadth()<B.getBreadth()&&A.getLength()==B.getLength())
     {
         diff=true;
     }else if ((A.getHeight()<B.getHeight())&&(A.getBreadth()==B.getBreadth())&&A.getLength()==B.getLength()) {
        diff=true;
     }else {
         diff=false;
     }
          
     return diff;
}



ostream& operator <<(ostream& out, Box& b){
    out<<b.getLength()<<" "<<b.getBreadth()<<" "<<b.getHeight();
    return out;
}





void check2()
{
	int n;
	cin>>n;
	Box temp;
	for(int i=0;i<n;i++)
	{
		int type;
		cin>>type;
		if(type ==1)
		{
			cout<<temp<<endl;
		}
		if(type == 2)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			temp=NewBox;
			cout<<temp<<endl;
		}
		if(type==3)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			if(NewBox<temp)
			{
				cout<<"Lesser\n";
			}
			else
			{
				cout<<"Greater\n";
			}
		}
		if(type==4)
		{
			cout<<temp.CalculateVolume()<<endl;
		}
		if(type==5)
		{
			Box NewBox(temp);
			cout<<NewBox<<endl;
		}

	}
}

int main()
{
	check2();
}
